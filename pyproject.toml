#############################
# Modernized project config #
#############################

[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "baloon"
description = "Baloon: Convert Golden Software BLN polygon files to Shapefile or GeoJSON."
readme = "README.md"
license = { text = "MIT" }
authors = [ { name = "Eric Miguel Ribeiro" } ]
requires-python = ">=3.10"
dynamic = ["version"]
keywords = ["gis", "geospatial", "converter", "bln", "shapefile", "geojson", "svg", "cli", "baloon", "interconversion"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: GIS",
  "Intended Audience :: Science/Research",
  "Environment :: Console"
]
dependencies = [
  "geopandas>=0.14",
  "shapely>=2.0",
  "pandas>=2.2",
  "pyproj>=3.6",
  "fiona>=1.9",
  "typer>=0.12",
  "rich>=13.7",
  "fastkml>=1.1.0",
  "pygeoif>=1.5.1",
  "lxml>=6.0.0",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.5.0",
  "pyright>=1.1.370",
  "pytest>=8.0",
  "pytest-cov>=5.0",
  "mypy>=1.10",
  "types-pytz",
  "types-python-dateutil",
]

[project.scripts]
baloon = "baloon.cli:app"
bln-converter = "baloon.cli:app"  # legacy entry point

[tool.hatch.version]
path = "src/baloon/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/baloon", "src/blnconverter"]

[tool.ruff]
target-version = "py310"
line-length = 100
lint.select = [
  "E", "F", "W",        # pycodestyle / pyflakes
  "I",                    # import sorting
  "N",                    # pep8-naming
  "B",                    # flake8-bugbear
  "UP",                   # pyupgrade
  "S",                    # bandit (security)
  "C4",                   # comprehensions
  "RUF"
]
lint.ignore = [
  "E501"  # handled by formatter section (line-length)
]
lint.per-file-ignores = {"tests/**" = ["S101"]}
format.preview = true

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["baloon", "blnconverter"]

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnknownMemberType = false
exclude = [".venv", "build", "dist"]

[tool.coverage.run]
branch = true
source = ["src/baloon"]

[tool.coverage.report]
show_missing = true

#################################
# UV specific (optional) config #
#################################
[tool.uv]
dev-dependencies = ["pre-commit>=3.7"]
